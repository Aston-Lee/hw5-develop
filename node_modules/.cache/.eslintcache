[{"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/index.js":"1","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/App.js":"2","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/reportWebVitals.js":"3","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/MainPage.js":"4","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/RegistrationPage.js":"5","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/LandingPage.js":"6","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/ProfilePage.js":"7","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/users.js":"8","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/Data.js":"9","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/topbar.js":"10","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Status.js":"11","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Post.js":"12","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/NewPostSection.js":"13","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Post2.js":"14","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SideBar.js":"15","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SidebarData.js":"16","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/RightBar.js":"17","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Online.js":"18","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SearchArea.js":"19"},{"size":535,"mtime":1666795746238,"results":"20","hashOfConfig":"21"},{"size":867,"mtime":1666743284898,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1666743284899,"results":"23","hashOfConfig":"21"},{"size":3428,"mtime":1666807430162,"results":"24","hashOfConfig":"21"},{"size":10302,"mtime":1666802694645,"results":"25","hashOfConfig":"21"},{"size":6139,"mtime":1666760096368,"results":"26","hashOfConfig":"21"},{"size":11024,"mtime":1666803196967,"results":"27","hashOfConfig":"21"},{"size":8794,"mtime":1666746916399,"results":"28","hashOfConfig":"21"},{"size":7615,"mtime":1666743284898,"results":"29","hashOfConfig":"21"},{"size":1482,"mtime":1666743284899,"results":"30","hashOfConfig":"21"},{"size":1586,"mtime":1666829314886,"results":"31","hashOfConfig":"21"},{"size":1631,"mtime":1666743284898,"results":"32","hashOfConfig":"21"},{"size":2923,"mtime":1666755284363,"results":"33","hashOfConfig":"21"},{"size":1415,"mtime":1666754751857,"results":"34","hashOfConfig":"21"},{"size":3707,"mtime":1666743284898,"results":"35","hashOfConfig":"21"},{"size":1043,"mtime":1666743284898,"results":"36","hashOfConfig":"21"},{"size":2882,"mtime":1666829919943,"results":"37","hashOfConfig":"21"},{"size":536,"mtime":1666749021116,"results":"38","hashOfConfig":"21"},{"size":341,"mtime":1666807565034,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1t0hoxk",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/index.js",[],[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/App.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/reportWebVitals.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/MainPage.js",["107","108","109","110","111","112","113"],[],"\nimport \"./MainPage.css\";\n\nimport { useEffect, useState } from 'react';\n\nimport Topbar from \"../components/topbar\";\nimport Post from \"../components/Post\"\nimport Post2 from \"../components/Post2\"\nimport NewPostSection from \"../components/NewPostSection\"\nimport RightBar from \"../components/RightBar\"\nimport Status from '../components/Status';\nimport SearchArea from '../components/SearchArea';\nimport axios from 'axios';\n\nimport { Posts, PostsLeft } from \"../Data\"\n\n\nexport default function MainPage() {\n\n    const postarray = Posts\n    const [PostArray, SetPostPrray] = useState(PostsLeft)\n\n    const [users, setUsers] = useState();\n    const [posts, setPosts] = useState();\n\n    let [filteredPosts, setFilteredPosts] = useState();\n    let [NewPost, setNewPost] = useState([]);\n\n    const getUsersData = async () => {\n        const response = await fetch(\n            \"https://jsonplaceholder.typicode.com/users\"\n        ).then((response) => response.json());\n        setUsers(response);\n    };\n\n    useEffect(() => {\n        getUsersData();\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n            .then(response => {\n\n                // add random timestamp to each post\n                const tmpposts = response.data.map(post => {\n                    const timestamp = Math.floor(Math.random() * 1000000000000);\n                    return { ...post, timestamp }\n                })\n                setPosts(tmpposts);\n            }, error => {\n                console.log(error);\n            });\n    }, []);\n\n\n    var username = localStorage.getItem(\"username\");\n    var newuser = localStorage.getItem(\"newuser\");\n\n    let followList = []\n    if (newuser === true) {\n        followList = []\n    } else {\n        // get followed from local storage and make it array\n        followList = localStorage.getItem(\"followed\")\n    }\n    console.log(followList)\n    filteredPosts = posts?.filter(post => followList.includes(post.userId))\n    console.log(filteredPosts)\n    \n    useEffect(() => {\n        setFilteredPosts(filteredPosts)\n    }, error => {\n        console.log(error);\n    });\n\n\n    return (\n\n        <>\n            <header>\n\n                <Topbar />\n                <div className=\"container\">\n                    <NewPostSection username={localStorage.getItem(\"username\")} posts={NewPost} setPosts={setNewPost} />\n                    <Status />\n                </div>\n            </header>\n            <div className=\"pageformat\">\n                <div className=\"gridformat\">\n                    <div className=\"gridpost\" tabIndex={0}>\n                        {NewPost.map((p) => (\n                            <Post2 key={p.index} post={p} />\n                        ))}\n                        {filteredPosts?.sort((a, b) => b.timestamp - a.timestamp).map(post => (\n                            <Post2 post={post} key={post.id} username={username} newuser={newuser} />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"gridformat\">\n                    <div className=\"searcharea\" tabIndex={0}>\n                        <SearchArea />  \n                    </div>\n                    <div className=\"rightbar\" tabIndex={0}>\n                        \n                        <RightBar filteredPosts={filteredPosts} setFilteredPosts={setFilteredPosts} />\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/RegistrationPage.js",["114","115","116","117"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RegistrationPage.css'\n\nexport default function RegistrationPage() {\n    const navigate = useNavigate();\n    const [Input, setInput] = useState({\n        username: \"\",\n        displayname: \"\",\n        email: \"\",\n        phone: \"\",\n        birthday: \"\",\n        zipcode: \"\",\n        password1: \"\",\n        password2: \"\",\n        newuser: 1\n    });\n\n    const verified = true;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        //to-do verifcation(2pt)\n\n\n        console.log(verified)\n        if (verified===true){\n            // localStorage.setItem(\"user\", JSON.stringify(Input));\n            localStorage.setItem(\"username\", Input.username);\n            localStorage.setItem(\"displayname\",Input.displayname);\n            localStorage.setItem(\"email\", Input.email);\n            localStorage.setItem(\"phone\", Input.phone);\n            localStorage.setItem(\"birthday\", Input.birthday);\n            localStorage.setItem(\"zipcode\", Input.zipcode);\n            localStorage.setItem(\"password1\", Input.password1);\n            localStorage.setItem(\"password2\", Input.password2);\n            localStorage.setItem(\"newuser\", true);\n            localStorage.setItem(\"catchphrase\", \"happy day\");\n            localStorage.setItem(\"followed\", \"[]\");\n            navigate('/MainPage')\n        }\n    };\n\n    const [regdatadata, setregdatadata] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    const { username, password } = regdatadata;\n\n    const changeHandler = e => {\n        setregdatadata({ ...regdatadata, [e.target.name]: [e.target.value] });\n    }\n\n    const submitHandler = e => {\n        e.preventDefault();\n        console.log(regdatadata);\n        console.log(regdatadata.username);\n        console.log(regdatadata.password);\n    }\n\n    return (\n        <div className='RegFormOuter'>\n            <form\n                className='RegFormContainer'\n                method=\"GET\"\n                id=\"RegistrationPage\"\n                // action to change\n                action=\"formProcessor.html\"\n                // return validation, should I put the validation into submitHandler?\n                // onsubmit=\"return Validation()\"\n                // onSubmit={submitHandler}\n                onSubmit = {handleSubmit}\n                target=\"_blank\"\n            >\n                <div className='RegFormWrapper'>\n                    <h1> Registration Page</h1>\n                    <div>\n                        <p>\n                            {\" \"}\n                            username: <br />{\" \"}\n                            <input\n                                type=\"type\"\n                                value={Input.username}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                // onChange={changeHandler}\n                                name=\"username\"\n                                id=\"username\"\n                                placeholder=\"abc123\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <p>\n                            {\" \"}\n                            display name (optional) <br />{\" \"}\n                            <input\n                                type=\"type\"\n                                name=\"displayname\"\n                                value={Input.displayname}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"displayname\"\n                                placeholder=\"Aston\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <p>\n                            {\" \"}\n                            email address <br />{\" \"}\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={Input.email}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"emailaddress\"\n                                placeholder=\"abc@gmail.com\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <p>\n                            {\" \"}\n                            Phone: <br />{\" \"}\n                            <input\n                                type=\"tel\"\n                                name=\"phone\"\n                                value={Input.phone}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                // onChange={changeHandler}\n                                id=\"phone\"\n                                placeholder=\"123-123-1234\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        {/*todo: 18yo vailidation*/}\n                        <label htmlFor=\"dob\">date of birth:</label>\n                        <br />\n                        <input\n                            type=\"date\"\n                            name='birthday'\n                            value={Input.birthday}\n                            onChange={(e) =>\n                                setInput({\n                                    ...Input,\n                                    [e.target.name]: e.target.value,\n                                })\n                            }\n                            id=\"dob\"\n                            required=\"\"\n                        /> <p />\n                    </div>\n                    <div>\n                        {\" \"}\n                        {/*five digits, five digits + dash + 4 digits*/}\n                        <p>\n                            {\" \"}\n                            zipcode <br />{\" \"}\n                            <input\n                                type=\"type\"\n                                name=\"zipcode\"\n                                value={Input.zipcode}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"zipcode\"\n                                placeholder={77005}\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        {/*todo: password vailidation*/}\n                        <p>\n                            {\" \"}\n                            password <br />{\" \"}\n                            <input\n                                type=\"password\"\n                                name=\"password1\"\n                                value={Input.password1}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"password1\"\n                                placeholder=\"password\"\n                                defaultValue=\"\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <p>\n                            {\" \"}\n                            password confirmation <br />{\" \"}\n                            <input\n                                type=\"password\"\n                                name=\"password2\"\n                                value={Input.password2}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"password2\"\n                                defaultValue=\"\"\n                                placeholder=\"confirm password\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <input className='Button' type=\"submit\" defaultValue=\"submit\" />\n                    </div>\n                    <div className='register'>\n                        <button className='Button' type=\"reset\">Clear</button>\n                    </div>\n                    <input\n                        type=\"hidden\"\n                        name=\"timestamp\"\n                        id=\"timestamp\"\n                        defaultValue=\"somevalue\"\n                    />\n                </div>\n                <div className='register'>\n                        <button className='Button' onClick={() => navigate('/')}>Login?</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/LandingPage.js",["118","119","120","121"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { Users, Posts } from '../Data';\nimport { useEffect } from 'react';\nimport './LandingPage.css'\n\nimport {users} from '../users'\n\nexport default function RegistrationPage() {\n    const navigate = useNavigate();\n    const navigate2 = useNavigate();\n    const [Input, setInput] = useState({\n        username: \"\",\n        password1: \"\"\n    });\n\n    // fetch json file from path(src/users.json)\n    console.log(users)\n\n\n    // fetch user info from https://jsonplaceholder.typicode.com/users json file   \n    // const [users, setUsers] = useState();\n    // const getUsersData = async () => {\n    //     const response = fetch(\n    //         '../users.json'\n    //     ).then((response) => response.json());\n    //     setUsers(response);\n    // };\n\n    // useEffect(() => {\n    //     getUsersData();\n    // }, []);\n\n\n    // set login state\n    const [Login, setLogin] = useState({\n        username: \"\",\n        password: \"\"\n    });\n\n    var verified = false;\n\n    \n    // const userarray = Users.map(({ username }) => username)\n    // const passwordarray = Users.map(({ password }) => password)\n\n    const handleSubmit = (e) => {\n        // check if Input.username is in users, let password be any value\n        const user = users.find(user => user.username === Input.username && Input.password1 == user.address.street);\n        if (user) {\n            verified = true;\n            // alert(\"Username already exists\");\n        } else {\n            alert(\"user not found\");\n        }\n\n        \n        e.preventDefault();\n        console.log(Input.username)\n        console.log(Input.password1)\n\n        //to-do verifcation(2pt)\n        console.log(verified)\n\n        if (verified === true) {\n            localStorage.setItem(\"username\", user.username);\n            localStorage.setItem(\"id\", user.id)\n            localStorage.setItem(\"email\", user.email)\n            // localStorage.setItem(\"address\", \"street\"+ \"suite\"+ \"city\"+ \"zipcode\")\n            localStorage.setItem(\"phone\", user.phone)\n            localStorage.setItem(\"address\", user.address.street + \", \" + user.address.suite + \", \" + user.address.city + \", \" + user.address.zipcode)\n            localStorage.setItem(\"website\", user.website)\n            localStorage.setItem(\"catchPhrase\", user.company.catchPhrase)\n            localStorage.setItem(\"newuser\", false)\n            localStorage.setItem(\"followed\", user.followed)\n\n            // localStorage.setItem(\"userobject\", JSON.stringify(user))\n\n            //using redux to store user info\n            // const action = { type: 'LOGIN', payload: user };\n            // dispatch(action);    \n            // console.log(action.payload)\n            // console.log(action.payload.username)\n            // console.log(action.payload.id)\n            // console.log(action.payload.email)\n            // console.log(action.payload.address)\n            // console.log(action.payload.phone)\n            // console.log(action.payload.website)\n            \n\n            navigate('/MainPage')\n        } else {\n            window.alert(\"not registered user or wrong login information\")\n        }\n    };\n\n\n    return (\n        <div className='RegFormOuter'>\n            <form\n                className='RegFormContainer'\n                id=\"RegistrationPage\"\n                // action to change\n                // return validation, should I put the validation into submitHandler?\n                // onsubmit=\"return Validation()\"\n                // onSubmit={submitHandler}\n                onSubmit={handleSubmit}\n                target=\"_blank\"\n            >\n                <div className='RegFormWrapper'>\n                    <h1> Login</h1>\n                    <div>\n                        <p>\n                            {\" \"}\n                            username: <br />{\" \"}\n                            <input\n                                data-testid=\"username\" \n                                type=\"type\"\n                                value={Input.username}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                // onChange={changeHandler}\n                                name=\"username\"\n                                id=\"username\"\n                                placeholder=\"abc123\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        {/*todo: password vailidation*/}\n                        <p>\n                            {\" \"}\n                            password <br />{\" \"}\n                            <input\n                                data-testid=\"password\" \n                                type=\"password\"\n                                name=\"password1\"\n                                value={Input.password1}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"password1\"\n                                placeholder=\"password\"\n                                defaultValue=\"\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <input className='Button' data-testid='submit' type=\"submit\" defaultValue=\"submit\" />\n                    </div>\n                    <div className='register'>\n                        <button className='Button' onClick={() => navigate2('/RegistrationPage')}>register</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/pages/ProfilePage.js",["122","123","124","125","126","127"],[],"import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Topbar from '../components/topbar'\nimport { users } from '../users'\nimport './ProfilePage.css'\n\nexport default function ProfilePage() {\n\n    function validation() {\n\n        var phone = document.getElementById('phone').value;\n        var zipcode = document.getElementById('zipcode').value;\n        var password1 = document.getElementById('password1').value;\n        var password2 = document.getElementById('password2').value;\n\n\n        var isValidPhone = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/.test(phone);\n        if (phone & !isValidPhone) {\n            alert(\"Phone format is xxx-xxx-xxxx\")\n            return false;\n        }\n\n        var isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(zipcode);\n        if (zipcode & !isValidZip) {\n            alert(\"Zip code format is 5 digits or 5 digits + dash + 4 digits\")\n            return false;\n        }\n\n        if (password1 || password2) {\n            if (password1 != password2) {\n                alert(\"Your password not match\");\n                return false;\n            }\n        }\n\n        var output = \"\";\n        var displayname = document.forms[\"Profilepage\"][\"displayname\"].value;\n        var emailaddress = document.forms[\"Profilepage\"][\"emailaddress\"].value;\n        // var phone = document.forms[\"Profilepage\"][\"phone\"].value;\n        // var zipcode = document.forms[\"Profilepage\"][\"zipcode\"].value;\n        if (displayname) {\n            output += \"displayname: \" + document.getElementById(\"displaynamespan\").innerHTML + \" to \" + displayname + \"\\n\";\n            document.getElementById(\"displaynamespan\").innerHTML = displayname;\n            document.getElementById(\"displayname\").value = \"\"\n            document.getElementById(\"displayname\").setAttribute(\"placeholder\", displayname)\n        }\n        if (emailaddress) {\n            output += \"email address: \" + document.getElementById(\"emailaddressspan\").innerHTML + \" to \" + emailaddress + \"\\n\";\n            document.getElementById(\"emailaddressspan\").innerHTML = emailaddress;\n            document.getElementById(\"emailaddress\").value = \"\"\n            document.getElementById(\"emailaddress\").setAttribute(\"placeholder\", emailaddress)\n        }\n        if (zipcode) {\n            output += \"zipcode: \" + document.getElementById(\"zipcodespan\").innerHTML + \" to \" + zipcode + \"\\n\";\n            document.getElementById(\"zipcodespan\").innerHTML = zipcode;\n            document.getElementById(\"zipcode\").value = \"\"\n            document.getElementById(\"zipcode\").setAttribute(\"placeholder\", zipcode)\n        }\n        if (phone) {\n            output += \"phone: \" + document.getElementById(\"phonespan\").innerHTML + \" to \" + phone + \"\\n\";\n            document.getElementById(\"phonespan\").innerHTML = phone;\n            document.getElementById(\"phone\").value = \"\"\n            document.getElementById(\"phone\").setAttribute(\"placeholder\", phone)\n        }\n        // window.alert(output + \"profile has been updated\")\n\n        return false // prevent page to refresh\n    }\n\n    const [Input, setInput] = useState({\n        username: localStorage.getItem(\"username\"),\n        displayname: localStorage.getItem(\"displayname\"),\n        email: localStorage.getItem(\"email\"),\n        phone: localStorage.getItem(\"phone\"),\n        birthday: localStorage.getItem(\"birthday\"),\n        zipcode: localStorage.getItem(\"zipcode\"),\n        password1: localStorage.getItem(\"password1\"),\n        password2: localStorage.getItem(\"password2\"),\n        newuser: localStorage.getItem(\"newuser\"),\n    });\n\n    const verified = true\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        //to-do verifcation(2pt)\n\n\n        console.log(verified)\n        if (verified === true) {\n            // localStorage.setItem(\"user\", JSON.stringify(Input));\n            // inputRef.current.value\n            localStorage.setItem(\"username\", usernameinputRef.current.value || Input.username);\n            localStorage.setItem(\"displayname\", displayinputRef.current.value || Input.displayname);\n            localStorage.setItem(\"email\", emailinputRef.current.value || Input.email);\n            localStorage.setItem(\"phone\", phoneinputRef.current.value || Input.phone);\n            localStorage.setItem(\"birthday\", birthdayinputRef.current.value || Input.birthday);\n            localStorage.setItem(\"zipcode\", zipcodeinputRef.current.value || Input.zipcode);\n            localStorage.setItem(\"password1\", password1inputRef.current.value || Input.password1);\n            localStorage.setItem(\"password2\", password2inputRef.current.value || Input.password2);\n\n            usernameinputRef.current.value = null;\n            displayinputRef.current.value = null\n            emailinputRef.current.value = null\n            phoneinputRef.current.value = null\n            birthdayinputRef.current.value = null\n            zipcodeinputRef.current.value = null\n            password1inputRef.current.value = null\n            password2inputRef.current.value = null\n\n            // navigate('/MainPage')\n        }\n    };\n    const usernameinputRef = useRef(null);\n    const displayinputRef = useRef(null);\n    const emailinputRef = useRef(null);\n    const phoneinputRef = useRef(null);\n    const birthdayinputRef = useRef(null);\n    const zipcodeinputRef = useRef(null);\n    const password1inputRef = useRef(null);\n    const password2inputRef = useRef(null);\n\n\n    const navigate = useNavigate()\n\n\n    const uploadinputRef = useRef(null);\n\n    const uploadhandleClick = () => {\n        uploadinputRef.current.click();\n    };\n\n    const uploadhandleFileChange = event => {\n        const fileObj = event.target.files && event.target.files[0];\n        if (!fileObj) {\n            return;\n        }\n        event.target.value = null;\n    }\n\n    //set url for profile picture\n    if (localStorage.getItem(\"newuser\") == false) {\n        localStorage.setItem(\"profilepicture\", \"https://www.w3schools.com/howto/img_avatar.png\")\n    } else {\n        localStorage.setItem(\"profilepicture\", users.filter(user => user.username === localStorage.getItem(\"username\"))[0].profilePicture )\n    }\n    // const url = users.filter(user => user.username === localStorage.getItem(\"username\"))[0].profilePicture\n\n    return (\n        <div className='RegFormOuter'>\n            <form className='RegFormContainer' id=\"Profilepage\" onSubmit={handleSubmit} >\n                <h1> Profile Update</h1>\n                <input\n                    style={{ display: 'none' }}\n                    ref={uploadinputRef}\n                    type=\"file\"\n                    onChange={uploadhandleFileChange}\n                />\n                <div>\n                    {/* <img className='profilePicture' src={users.filter(user => user.username === localStorage.getItem(\"username\"))[0].profilePicture} /> */}\n                    <img className='profilePicture' src={localStorage.getItem(\"profilepicture\")} />\n                </div>\n                <button className='PostButton' onClick={uploadhandleClick}>\n                    {/* <BiImageAdd className='videoPost'/> */}\n                    Change Profile Pic</button>\n\n                <div>\n                    <p> username: <input type=\"type\" name=\"username\"\n                        ref={usernameinputRef}\n                        onChange={(e) =>\n                            setInput({\n                                ...Input,\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        id=\"username\" placeholder={Input.username} />\n                        <span id=\"displaynamespan\" />\n                    </p>\n                </div>\n                {/* <div>\n                    <p> display name: <input ref={displayinputRef} type=\"type\" name=\"displayname\" id=\"displayname\" placeholder={localStorage.getItem(\"displayname\")} />\n                        <span id=\"displaynamespan\" />\n                    </p>\n                </div> */}\n                <div>\n                    <p> email address: <input type=\"email\"\n                        ref={emailinputRef}\n                        name=\"emailaddress\" id=\"emailaddress\" placeholder={localStorage.getItem(\"email\")} />\n                        <span id=\"emailaddressspan\"></span>\n                    </p>\n                </div>\n                <div>\n                    <p> phone number: <input type=\"tel\"\n                        ref={phoneinputRef}\n                        name=\"phone\" id=\"phone\"\n                        onChange={(e) =>\n                            setInput({\n                                ...Input,\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        placeholder={localStorage.getItem(\"phone\")} />\n                        <span id=\"phonespan\" />\n                    </p>\n                </div>\n                {/* <div>\n\n                    <label htmlFor=\"dob\">date of birth:</label>\n\n                    <input\n                        type=\"date\"\n                        name='birthday'\n                        // value={Input.birthday}\n                        ref={birthdayinputRef}\n                        onChange={(e) =>\n                            setInput({\n                                ...Input,\n                                [e.target.name]: e.target.value,\n                            })\n                        }\n                        id=\"dob\"\n                        required=\"\"\n                    /> <p />\n                </div> */}\n                <div> {/*five digits, five digits + dash + 4 digits*/}\n                    <p> zipcode  <input type=\"type\" ref={zipcodeinputRef}\n                        name=\"zipcode\" id=\"zipcode\" placeholder={localStorage.getItem(\"zipcode\")} />\n                        <span id=\"zipcodespan\" />\n                    </p>\n                </div>\n                <div>{/*todo: password vailidation*/}\n                    <p> password  <input type=\"password\" ref={password1inputRef} name=\"password1\" id=\"password1\" placeholder=\"********\" /> </p>\n                </div>\n                <div>\n                    <p> password confirmation  <input type=\"password\" ref={password2inputRef} name=\"password2\" id=\"password2\" placeholder=\"confirm password\" /> </p>\n                </div>\n                <div>\n                    <input className='Button' type=\"submit\" defaultValue=\"submit\" /> <br /><br />\n                    {/* <a href=\"./main.html\">Return to Main Page</a> */}\n                    {/* <button className='Button' onclick=\"window.location='./main.html'\">Return to Main Page</button> <br /> */}\n                </div>\n                <input type=\"hidden\" name=\"timestamp\" id=\"timestamp\" defaultValue=\"somevalue\" />\n                <div >\n                    <button className='Button' onClick={() => navigate('/MainPage')}>Return to Main Page</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/users.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/Data.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/topbar.js",["128","129","130"],[],"import \"./topbar.css\";\nimport SideBar from \"./SideBar\"\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import { Search } from \"@material-ui/icons\";\nimport {AiOutlineSearch} from \"react-icons/ai\"\n\nexport default function Topbar() {\n    \n    const navigate2 = useNavigate();\n    function handellogout(){\n        localStorage.clear();\n        navigate2(\"/\");\n    }\n\n\n    const navigate = useNavigate()\n    return (\n        <div className=\"topbarContainer\">\n            <SideBar />\n            <div className=\"topbarLeft\">\n                \n                <span className=\"logo\">Ricetagram</span>\n            </div>\n            <div className=\"topbarCenter\">\n            <div className=\"searchbar\">\n                <AiOutlineSearch className=\"searchIcon\" />\n                <input\n                    placeholder=\"Search for friend, post\"\n                    className=\"searchInput\"\n                />\n                </div>\n            </div>\n            <div className=\"topbarRight\">\n                <div className=\"topbarLinks\">\n                    {/* <span className=\"topbarLink\">Profilepage </span> */}\n                    <span className=\"topbarLink\" onClick={() => navigate('/ProfilePage')}>Profilepage</span>\n                    {/* <span className=\"topbarLink\">Timeline</span> */}\n                    <span className=\"topbarLink\" onClick={handellogout} >Logout</span>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Status.js",["131"],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Post.js",["132","133"],[],"import React from 'react'\nimport \"./Post.css\";\nimport { Users } from '../Data';\n\nexport default function Post({post, jsonusers}) {\n    return ( \n        <div className='post'>\n            <div className='postWrapper'>\n                <div className='postTop'>\n                    <div className='postTopLeft'>\n                        {/* <img className='postProfilePic' src={Users.filter(u=>u.id === post.userId)[0].profilePicture} /> */}\n                        <img className='postProfilePic' src={Users.filter(u=>u.id === post.userId)[0].profilePicture} />\n                        {/* <span className='postProfileName'> {jsonusers.filter(u=>u.id === post.userId)[0].username} </span> */}\n                        <span className='postProfileName'> {Users.filter(u=>u.id === post.userId)[0].username} </span>\n                        <span className=\"postTime\"> {post.date }</span>\n                    </div>\n                    <div className='postTopRight'>\n                        <button className='postEdit'> Edit</button>\n                    </div>\n                </div>\n                <div className='postMain'>\n                    <img className='postMainPic' src={post.photo}  />\n\n                </div>\n                <div className='postBot'>\n                    <div className='postBotLeft'>\n                        <span className='postMainCaptions'>{post?.desc} </span>\n                    </div>\n                    <div className='postBotRight'>\n                        <button className='postComment'> Comment</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/NewPostSection.js",["134"],[],"import { useRef } from 'react';\nimport './NewPostSection.css'\n// import { PermMedia } from \"@material-ui/icons\"\n// import { BiImageAdd } from 'react-icons/bi';\n\n\nexport default function NewPost({username, posts, setPosts }) {\n\n    const inputRef = useRef(null);\n\n    \n\n    function gerneratePost() {\n        var tmpuserid = localStorage.getItem(\"id\");\n        console.log(tmpuserid)\n        const thisarray = {\n            body: inputRef.current.value,\n            timestamp: Date.now(),\n            userId: parseInt(tmpuserid),\n            id: posts.length + 1,\n        }\n        console.log(thisarray)\n        setPosts([thisarray, ...posts])\n    }\n\n    function clearPost(){\n        inputRef.current.value = \"\"\n    }\n    \n    const uploadinputRef = useRef(null);\n\n    const uploadhandleClick = () => {\n        uploadinputRef.current.click();\n    };\n\n    const uploadhandleFileChange = event => {\n        const fileObj = event.target.files && event.target.files[0];\n        if (!fileObj) {\n          return;\n        }\n        event.target.value = null;\n    }\n\n\n    return (\n        <div>\n            <div className='NewPostContainer' >\n                <div className='NewPostWrapper'>\n                    <div className='NewPostTop'>\n                        <img className='NewPostProfilePic' src=\"https://images.squarespace-cdn.com/content/v1/5e59ec62d379cf1bffbb599b/1e4991ed-e574-41e1-b9e2-544fcb4eb1bf/DSC00563.jpg?format=1000w\" />\n                        {/* <span> Username</span> */}\n                        <div className='usernamespan' ><span>{username}</span></div>\n                        <input ref={inputRef} type=\"text\" id=\"message\" name=\"message\" placeholder=\"Share Something new?\" className=\"NewPostInput\" />\n                    </div>\n                    <hr className='NewPostHr' />\n                    <div className='NewPostBot'>\n                        <div className='Options'>\n\n                            <div>\n                                <input\n                                    style={{ display: 'none' }}\n                                    ref={uploadinputRef}\n                                    type=\"file\"\n                                    onChange={uploadhandleFileChange}\n                                />\n\n                                <button  className='PostButton' onClick={uploadhandleClick}>\n                                {/* <BiImageAdd className='videoPost'/> */}\n                                    Open file upload box</button>\n                            </div>\n                        </div>\n                        <div className='NewPostBotRight'>\n                            <button onClick={gerneratePost} className='PostButton'>Post</button>\n                            <button onClick={clearPost} className='PostButton'>Clear</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Post2.js",["135","136","137"],[],"import React from 'react'\nimport \"./Post.css\";\nimport { Users } from '../Data';\nimport { users } from '../users';\n\nexport default function Post2({post, username, newuser}) {\n    return ( \n        <div className='post'>\n            <div className='postWrapper'>\n                <div className='postTop'>\n                    <div className='postTopLeft'>\n\n                        <img className='postProfilePic' src={users.filter(u=>u.id === post.userId)[0].profilePicture} />\n                        <span className='postProfileName'> {users.filter(u=>u.id === post.userId)[0].username} </span>\n                        <span className=\"postTime\"> {post.date }</span>\n                    </div>\n                    <div className='postTopRight'>\n                        <button className='postEdit'> Edit</button>\n                    </div>\n                </div>\n                <div className='postMain'>\n                    <img className='postMainPic' src={post.photo}  />\n\n                </div>\n                <div className='postBot'>\n                    <div className='postBotLeft'>\n                        <span className='postMainCaptions'>{post?.body} </span>\n                    </div>\n                    <div className='postBotRight'>\n                        <button className='postComment'> Comment</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SideBar.js",["138","139","140"],[],"\nimport React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData, SidebarData1 } from './SidebarData.js';\nimport './SideBar.css';\nimport { IconContext } from 'react-icons';\n\nexport default function SideBar() {\n    const [sidebar, setSidebar] = useState(false);\n    \n    console.log(localStorage.getItem(\"newuser\"))\n    const [sidearray, setsidearray] = useState(SidebarData)\n\n    const removeItem = (index) => {\n        setsidearray([\n                   ...sidearray.slice(0, index),\n                   ...sidearray.slice(index + 1)\n                 ]);\n      }\n\n\n    const showSidebar = () => setSidebar(!sidebar);\n\n    \n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#fff' }}>\n                <div className='navbar'>\n                    <Link to='#' className='menu-bars'>\n                        <FaIcons.FaBars onClick={showSidebar} />\n                    </Link>\n                </div>\n                <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                    <ul className='nav-menu-items' onClick={showSidebar}>\n                        <li className='navbar-toggle'>\n                            <Link to='#' className='menu-bars'>\n                                <AiIcons.AiOutlineClose />\n                            </Link>\n                        </li>\n\n                        {sidearray.map((item, index) => {\n                            if (localStorage.getItem(\"newuser\") === 0) { // old user\n                                return (\n                                    <div className='profile-container' key={index} >\n\n                                        <img className={item.cName} src={item.icon} /> \n                                        <div className='profile-text'>\n                                            <span>{item.title}</span>\n                                        </div>\n                                        <div className='profile-status'>\n                                            <span>{item.status}</span>\n                                        </div>\n                                        <div>\n                                            {/* <button onClick={removeItem({index})} className='unfollow-Button' >unfollow</button> */}\n                                        </div>\n                                        \n                                    </div>\n                                );\n                            } else {  // new user\n                                return (\n                                    <div className='profile-container' key={0} >\n\n                                        <img className={item.cName} src={item.icon} /> \n                                        <div className='profile-text'>\n                                            <span>{item.title}</span>\n                                        </div>\n                                        <div className='profile-status'>\n                                            <span>{item.status}</span>\n                                        </div>\n                                        <div>\n                                            <button onClick={(e) => removeItem(index, e)} className='unfollow-Button' >unfollow</button>\n                                        </div>\n                                        \n                                    </div>\n                                );\n                            }\n                            \n                        })}\n                    </ul>\n                </nav>\n            </IconContext.Provider>\n        </>\n    )\n}\n","/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SidebarData.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/RightBar.js",["141"],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/Online.js",[],[],"/Users/aston/Documents/GitHub/Rice MCS22 Fall/COMP 531/comp-531-hw5-develop/src/components/SearchArea.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":12},{"ruleId":"142","severity":1,"message":"146","line":20,"column":11,"nodeType":"144","messageId":"145","endLine":20,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":21,"column":12,"nodeType":"144","messageId":"145","endLine":21,"endColumn":21},{"ruleId":"142","severity":1,"message":"148","line":21,"column":23,"nodeType":"144","messageId":"145","endLine":21,"endColumn":35},{"ruleId":"142","severity":1,"message":"149","line":23,"column":12,"nodeType":"144","messageId":"145","endLine":23,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":69,"column":8,"nodeType":"152","endLine":71,"endColumn":6},{"ruleId":"150","severity":1,"message":"153","line":69,"column":8,"nodeType":"152","endLine":71,"endColumn":6,"suggestions":"154"},{"ruleId":"142","severity":1,"message":"155","line":50,"column":13,"nodeType":"144","messageId":"145","endLine":50,"endColumn":21},{"ruleId":"142","severity":1,"message":"156","line":50,"column":23,"nodeType":"144","messageId":"145","endLine":50,"endColumn":31},{"ruleId":"142","severity":1,"message":"157","line":52,"column":11,"nodeType":"144","messageId":"145","endLine":52,"endColumn":24},{"ruleId":"142","severity":1,"message":"158","line":56,"column":11,"nodeType":"144","messageId":"145","endLine":56,"endColumn":24},{"ruleId":"142","severity":1,"message":"159","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":19},{"ruleId":"142","severity":1,"message":"160","line":36,"column":12,"nodeType":"144","messageId":"145","endLine":36,"endColumn":17},{"ruleId":"142","severity":1,"message":"161","line":36,"column":19,"nodeType":"144","messageId":"145","endLine":36,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":49,"column":93,"nodeType":"164","messageId":"165","endLine":49,"endColumn":95},{"ruleId":"142","severity":1,"message":"166","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"167","line":9,"column":14,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},{"ruleId":"162","severity":1,"message":"168","line":30,"column":27,"nodeType":"164","messageId":"165","endLine":30,"endColumn":29},{"ruleId":"142","severity":1,"message":"169","line":60,"column":13,"nodeType":"144","messageId":"145","endLine":60,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":142,"column":41,"nodeType":"164","messageId":"165","endLine":142,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":161,"column":21,"nodeType":"172","endLine":161,"endColumn":100},{"ruleId":"142","severity":1,"message":"173","line":3,"column":27,"nodeType":"144","messageId":"145","endLine":3,"endColumn":33},{"ruleId":"142","severity":1,"message":"174","line":3,"column":35,"nodeType":"144","messageId":"145","endLine":3,"endColumn":41},{"ruleId":"142","severity":1,"message":"175","line":3,"column":43,"nodeType":"144","messageId":"145","endLine":3,"endColumn":48},{"ruleId":"142","severity":1,"message":"159","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":12,"column":25,"nodeType":"172","endLine":12,"endColumn":121},{"ruleId":"170","severity":1,"message":"171","line":22,"column":21,"nodeType":"172","endLine":22,"endColumn":70},{"ruleId":"170","severity":1,"message":"171","line":50,"column":25,"nodeType":"172","endLine":50,"endColumn":202},{"ruleId":"142","severity":1,"message":"176","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":13,"column":25,"nodeType":"172","endLine":13,"endColumn":121},{"ruleId":"170","severity":1,"message":"171","line":22,"column":21,"nodeType":"172","endLine":22,"endColumn":70},{"ruleId":"142","severity":1,"message":"177","line":6,"column":23,"nodeType":"144","messageId":"145","endLine":6,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":49,"column":41,"nodeType":"172","endLine":49,"endColumn":87},{"ruleId":"170","severity":1,"message":"171","line":66,"column":41,"nodeType":"172","endLine":66,"endColumn":87},{"ruleId":"142","severity":1,"message":"159","line":4,"column":20,"nodeType":"144","messageId":"145","endLine":4,"endColumn":29},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'postarray' is assigned a value but never used.","'PostArray' is assigned a value but never used.","'SetPostPrray' is assigned a value but never used.","'users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'filteredPosts'. Either include it or remove the dependency array. You can also do a functional update 'setFilteredPosts(f => ...)' if you only need 'filteredPosts' in the 'setFilteredPosts' call.",["178"],"'username' is assigned a value but never used.","'password' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'Login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Topbar' is defined but never used.","'validation' is defined but never used.","Expected '!==' and instead saw '!='.","'output' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Users' is defined but never used.","'SidebarData1' is defined but never used.",{"desc":"179","fix":"180"},"Update the dependencies array to be: [filteredPosts]",{"range":"181","text":"182"},[2054,2098],"[filteredPosts]"]