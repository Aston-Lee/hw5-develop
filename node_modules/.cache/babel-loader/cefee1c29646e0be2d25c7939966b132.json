{"ast":null,"code":"var _jsxFileName = \"/Users/aston/Documents/GitHub/Rice/COMP 531/comp-531-hw5-develop/src/pages/LandingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // import { Users, Posts } from '../Data';\n\nimport { useEffect } from 'react';\nimport './LandingPage.css';\nimport { users } from '../users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const navigate2 = useNavigate();\n  const [Input, setInput] = useState({\n    username: \"\",\n    password1: \"\"\n  }); // fetch json file from path(src/users.json)\n\n  console.log(users); // fetch user info from https://jsonplaceholder.typicode.com/users json file   \n  // const [users, setUsers] = useState();\n  // const getUsersData = async () => {\n  //     const response = fetch(\n  //         '../users.json'\n  //     ).then((response) => response.json());\n  //     setUsers(response);\n  // };\n  // useEffect(() => {\n  //     getUsersData();\n  // }, []);\n  // set login state\n\n  const [Login, setLogin] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  var verified = false; // const userarray = Users.map(({ username }) => username)\n  // const passwordarray = Users.map(({ password }) => password)\n\n  const handleSubmit = e => {\n    // check if Input.username is in users, let password be any value\n    const user = users.find(user => user.username === Input.username && Input.password1);\n\n    if (user) {\n      verified = true; // alert(\"Username already exists\");\n    } else {\n      alert(\"user not found\");\n    }\n\n    e.preventDefault();\n    console.log(Input.username);\n    console.log(Input.password1); //to-do verifcation(2pt)\n\n    console.log(verified);\n\n    if (verified === true) {\n      localStorage.setItem(\"username\", user.username);\n      localStorage.setItem(\"id\", user.id);\n      localStorage.setItem(\"email\", user.email); // localStorage.setItem(\"address\", \"street\"+ \"suite\"+ \"city\"+ \"zipcode\")\n\n      localStorage.setItem(\"phone\", user.phone);\n      localStorage.setItem(\"address\", user.address.street + \", \" + user.address.suite + \", \" + user.address.city + \", \" + user.address.zipcode);\n      localStorage.setItem(\"website\", user.website);\n      localStorage.setItem(\"catchPhrase\", user.company.catchPhrase);\n      localStorage.setItem(\"newuser\", false); //using redux to store user info\n      // const action = { type: 'LOGIN', payload: user };\n      // dispatch(action);    \n      // console.log(action.payload)\n      // console.log(action.payload.username)\n      // console.log(action.payload.id)\n      // console.log(action.payload.email)\n      // console.log(action.payload.address)\n      // console.log(action.payload.phone)\n      // console.log(action.payload.website)\n\n      navigate('/MainPage');\n    } else {\n      window.alert(\"not registered user or wrong login information\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegFormOuter\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RegFormContainer\",\n      id: \"RegistrationPage\" // action to change\n      // return validation, should I put the validation into submitHandler?\n      // onsubmit=\"return Validation()\"\n      // onSubmit={submitHandler}\n      ,\n      onSubmit: handleSubmit,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RegFormWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"username: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 39\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"type\",\n              value: Input.username,\n              onChange: e => setInput({ ...Input,\n                [e.target.name]: e.target.value\n              }) // onChange={changeHandler}\n              ,\n              name: \"username\",\n              id: \"username\",\n              placeholder: \"abc123\",\n              required: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"password \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 38\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password1\",\n              value: Input.password1,\n              onChange: e => setInput({ ...Input,\n                [e.target.name]: e.target.value\n              }),\n              id: \"password1\",\n              placeholder: \"password\",\n              defaultValue: \"\",\n              required: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Button\",\n            type: \"submit\",\n            defaultValue: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Button\",\n            onClick: () => navigate2('/RegistrationPage'),\n            children: \"register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegistrationPage, \"Wq8U5gVeDh+SqsJLck3wSSlHjv4=\", false, function () {\n  return [useNavigate, useNavigate];\n});\n\n_c = RegistrationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useNavigate","useEffect","users","RegistrationPage","navigate","navigate2","Input","setInput","username","password1","console","log","Login","setLogin","password","verified","handleSubmit","e","user","find","alert","preventDefault","localStorage","setItem","id","email","phone","address","street","suite","city","zipcode","website","company","catchPhrase","window","target","name","value"],"sources":["/Users/aston/Documents/GitHub/Rice/COMP 531/comp-531-hw5-develop/src/pages/LandingPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { Users, Posts } from '../Data';\nimport { useEffect } from 'react';\nimport './LandingPage.css'\n\nimport {users} from '../users'\n\nexport default function RegistrationPage() {\n    const navigate = useNavigate();\n    const navigate2 = useNavigate();\n    const [Input, setInput] = useState({\n        username: \"\",\n        password1: \"\"\n    });\n\n    // fetch json file from path(src/users.json)\n    console.log(users)\n\n\n    // fetch user info from https://jsonplaceholder.typicode.com/users json file   \n    // const [users, setUsers] = useState();\n    // const getUsersData = async () => {\n    //     const response = fetch(\n    //         '../users.json'\n    //     ).then((response) => response.json());\n    //     setUsers(response);\n    // };\n\n    // useEffect(() => {\n    //     getUsersData();\n    // }, []);\n\n\n    // set login state\n    const [Login, setLogin] = useState({\n        username: \"\",\n        password: \"\"\n    });\n\n    var verified = false;\n\n    \n    // const userarray = Users.map(({ username }) => username)\n    // const passwordarray = Users.map(({ password }) => password)\n\n    const handleSubmit = (e) => {\n        // check if Input.username is in users, let password be any value\n        const user = users.find(user => user.username === Input.username && Input.password1);\n        if (user) {\n            verified = true;\n            // alert(\"Username already exists\");\n        } else {\n            alert(\"user not found\");\n        }\n\n        \n        e.preventDefault();\n        console.log(Input.username)\n        console.log(Input.password1)\n\n        //to-do verifcation(2pt)\n        console.log(verified)\n\n        if (verified === true) {\n            localStorage.setItem(\"username\", user.username);\n            localStorage.setItem(\"id\", user.id)\n            localStorage.setItem(\"email\", user.email)\n            // localStorage.setItem(\"address\", \"street\"+ \"suite\"+ \"city\"+ \"zipcode\")\n            localStorage.setItem(\"phone\", user.phone)\n            localStorage.setItem(\"address\", user.address.street + \", \" + user.address.suite + \", \" + user.address.city + \", \" + user.address.zipcode)\n            localStorage.setItem(\"website\", user.website)\n            localStorage.setItem(\"catchPhrase\", user.company.catchPhrase)\n            localStorage.setItem(\"newuser\", false)\n\n            //using redux to store user info\n            // const action = { type: 'LOGIN', payload: user };\n            // dispatch(action);    \n            // console.log(action.payload)\n            // console.log(action.payload.username)\n            // console.log(action.payload.id)\n            // console.log(action.payload.email)\n            // console.log(action.payload.address)\n            // console.log(action.payload.phone)\n            // console.log(action.payload.website)\n            \n\n            navigate('/MainPage')\n        } else {\n            window.alert(\"not registered user or wrong login information\")\n        }\n    };\n\n\n    return (\n        <div className='RegFormOuter'>\n            <form\n                className='RegFormContainer'\n                id=\"RegistrationPage\"\n                // action to change\n                // return validation, should I put the validation into submitHandler?\n                // onsubmit=\"return Validation()\"\n                // onSubmit={submitHandler}\n                onSubmit={handleSubmit}\n                target=\"_blank\"\n            >\n                <div className='RegFormWrapper'>\n                    <h1> Login</h1>\n                    <div>\n                        <p>\n                            {\" \"}\n                            username: <br />{\" \"}\n                            <input\n                                type=\"type\"\n                                value={Input.username}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                // onChange={changeHandler}\n                                name=\"username\"\n                                id=\"username\"\n                                placeholder=\"abc123\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        {/*todo: password vailidation*/}\n                        <p>\n                            {\" \"}\n                            password <br />{\" \"}\n                            <input\n                                type=\"password\"\n                                name=\"password1\"\n                                value={Input.password1}\n                                onChange={(e) =>\n                                    setInput({\n                                        ...Input,\n                                        [e.target.name]: e.target.value,\n                                    })\n                                }\n                                id=\"password1\"\n                                placeholder=\"password\"\n                                defaultValue=\"\"\n                                required=\"\"\n                            />{\" \"}\n                        </p>\n                    </div>\n                    <div>\n                        <input className='Button' type=\"submit\" defaultValue=\"submit\" />\n                    </div>\n                    <div className='register'>\n                        <button className='Button' onClick={() => navigate2('/RegistrationPage')}>register</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}