{"ast":null,"code":"var _jsxFileName = \"/Users/aston/Documents/GitHub/Rice/COMP 531/hw4-Aston-Lee/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MainPage.css\";\nimport RiceOwl from './RiceOwl.png';\nimport { useEffect, useState } from 'react';\nimport Topbar from \"../components/topbar\";\nimport Post from \"../components/Post\";\nimport NewPost from \"../components/NewPost\";\nimport Status from '../components/Status';\nimport { Posts, PostsLeft } from \"../Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n\n  const postarray = Posts;\n  const [PostArray, SetPostPrray] = useState(PostsLeft);\n  const [users, setUsers] = useState();\n  const [posts, setPosts] = useState();\n\n  const getUsersData = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json());\n    setUsers(response);\n  };\n\n  useEffect(() => {\n    getUsersData();\n  }, []);\n  console.log(users);\n\n  const getPostsData = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json());\n    setPosts(response);\n  };\n\n  useEffect(() => {\n    getPostsData();\n  }, []);\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(NewPost, {\n          postleft: PostArray,\n          setprops: SetPostPrray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Status, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageformat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridformat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridpost\",\n          tabIndex: 0,\n          children: PostArray.map(p => /*#__PURE__*/_jsxDEV(Post, {\n            post: p\n          }, p.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridformat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridpost\",\n          tabIndex: 0,\n          children: postarray.map(p => /*#__PURE__*/_jsxDEV(Post, {\n            post: p\n          }, p.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"JUffZVPowXPVZ32aeDDfghtC08s=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["RiceOwl","useEffect","useState","Topbar","Post","NewPost","Status","Posts","PostsLeft","MainPage","postarray","PostArray","SetPostPrray","users","setUsers","posts","setPosts","getUsersData","response","fetch","then","json","console","log","getPostsData","map","p","index"],"sources":["/Users/aston/Documents/GitHub/Rice/COMP 531/hw4-Aston-Lee/src/pages/MainPage.js"],"sourcesContent":["\nimport \"./MainPage.css\";\nimport RiceOwl from './RiceOwl.png';\n\nimport { useEffect, useState } from 'react';\n\nimport Topbar from \"../components/topbar\";\nimport Post from \"../components/Post\"\nimport NewPost from \"../components/NewPost\"\nimport Status from '../components/Status';\n\nimport { Posts, PostsLeft } from \"../Data\"\n\nexport default function MainPage() {\n\n    const postarray = Posts\n    const [PostArray, SetPostPrray] = useState(PostsLeft)\n\n\n    const [users, setUsers] = useState();\n    const [posts, setPosts] = useState();\n\n    const getUsersData = async () => {\n        const response = await fetch(\n            \"https://jsonplaceholder.typicode.com/users\"\n        ).then((response) => response.json());\n        setUsers(response);\n    };\n\n    useEffect(() => {\n        getUsersData();\n    }, []);\n    console.log(users)\n\n    const getPostsData = async () => {\n        const response = await fetch(\n            \"https://jsonplaceholder.typicode.com/posts\"\n        ).then((response) => response.json());\n        setPosts(response);\n    };\n\n    useEffect(() => {\n        getPostsData();\n    }, []);\n    console.log(posts)\n\n    return (\n\n        <>\n            <header>\n\n                <Topbar />\n                <div className=\"container\">\n                    <NewPost postleft={PostArray} setprops={SetPostPrray} />\n                    <Status />\n                </div>\n            </header>\n            <div className=\"pageformat\">\n                <div className=\"gridformat\">\n                    <div className=\"gridpost\" tabIndex={0}>\n                        {PostArray.map((p) => (\n                            <Post key={p.index} post={p} />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"gridformat\">\n                    <div className=\"gridpost\" tabIndex={0}>\n                        {postarray.map((p) => (\n                            <Post key={p.index} post={p} />\n                        ))}\n                    </div>\n                </div>\n\n            </div>\n\n        </>\n\n    )\n}\n"],"mappings":";;;AACA,OAAO,gBAAP;AACA,OAAOA,OAAP,MAAoB,eAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,SAAjC;;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAE/B,MAAMC,SAAS,GAAGH,KAAlB;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACM,SAAD,CAA1C;EAGA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;;EAEA,MAAMe,YAAY,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,4CADwB,CAAL,CAErBC,IAFqB,CAEfF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAFE,CAAvB;IAGAP,QAAQ,CAACI,QAAD,CAAR;EACH,CALD;;EAOAjB,SAAS,CAAC,MAAM;IACZgB,YAAY;EACf,CAFQ,EAEN,EAFM,CAAT;EAGAK,OAAO,CAACC,GAAR,CAAYV,KAAZ;;EAEA,MAAMW,YAAY,GAAG,YAAY;IAC7B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CACxB,4CADwB,CAAL,CAErBC,IAFqB,CAEfF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAFE,CAAvB;IAGAL,QAAQ,CAACE,QAAD,CAAR;EACH,CALD;;EAOAjB,SAAS,CAAC,MAAM;IACZuB,YAAY;EACf,CAFQ,EAEN,EAFM,CAAT;EAGAF,OAAO,CAACC,GAAR,CAAYR,KAAZ;EAEA,oBAEI;IAAA,wBACI;MAAA,wBAEI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI,QAAC,OAAD;UAAS,QAAQ,EAAEJ,SAAnB;UAA8B,QAAQ,EAAEC;QAAxC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI;QAAK,SAAS,EAAC,YAAf;QAAA,uBACI;UAAK,SAAS,EAAC,UAAf;UAA0B,QAAQ,EAAE,CAApC;UAAA,UACKD,SAAS,CAACc,GAAV,CAAeC,CAAD,iBACX,QAAC,IAAD;YAAoB,IAAI,EAAEA;UAA1B,GAAWA,CAAC,CAACC,KAAb;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QAAK,SAAS,EAAC,YAAf;QAAA,uBACI;UAAK,SAAS,EAAC,UAAf;UAA0B,QAAQ,EAAE,CAApC;UAAA,UACKjB,SAAS,CAACe,GAAV,CAAeC,CAAD,iBACX,QAAC,IAAD;YAAoB,IAAI,EAAEA;UAA1B,GAAWA,CAAC,CAACC,KAAb;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA,gBAFJ;AAgCH;;GAjEuBlB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}